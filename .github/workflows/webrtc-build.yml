name: WebRTC library build for arm64

on:
  workflow_dispatch:
    inputs:
      WEBRTC_STABLE:
        description: 'WebRTC branch-head version (e.g. 6422)'
        required: true
        default: '6422'
      LLVM_VERSION:
        description: 'LLVM version (e.g. 18.1.5)'
        required: true
        default: '18.1.5'


jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      packages: read  # Needed to pull from GHCR

    steps:
      - name: Free up disk space aggressively
        run: |
          sudo apt-get clean
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc \
          /opt/hostedtoolcache "$AGENT_TOOLSDIRECTORY"
          df -h

      - uses: actions/checkout@v4

      - name: Authenticate to GHCR
        # we use authorisation as providing the image public is not supported by API, so this is more stable
        # but we try to not forget to make the image public by hand
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Run WebRTC build inside prebuilt container
        run: |
          docker run --rm \
            -e LLVM_DIR="/opt/llvm-aarch64" \
            -e WEBRTC_STABLE="${{ inputs.WEBRTC_STABLE }}" \
            -v ${{ github.workspace }}:/work \
            ghcr.io/${{ github.repository_owner }}/depot-arm64-cross:llvm-${{ inputs.LLVM_VERSION }} \
            bash -c '
              env | grep WEBRTC_STABLE
              env | grep LLVM_DIR
              export PATH="/opt/depot_tools:$PATH"
              export DEPOT_TOOLS_UPDATE=0
              mkdir -p /tmp/webrtc_build
              cd /tmp/webrtc_build
              git config --global user.name "doorstation"
              git config --global user.email "doorstation@users.noreply.github.com"
              git config --global core.autocrlf false
              git config --global core.filemode false
              git config --global fetch.recurseSubmodules false
              git config --global http.postBuffer 1048576000
              git config --global core.compression 0

              echo "==> Fetching WebRTC source"
              fetch --nohooks webrtc

              echo "==> Checkout stable branch ${WEBRTC_STABLE}"
              cd /tmp/webrtc_build/src
              git checkout -b branch_${WEBRTC_STABLE} branch-heads/${WEBRTC_STABLE}

              echo "==> Running gclient sync with minimal downloads"
              gclient sync  --with_branch_heads --with_tags

              echo "==> Generating build configuration"
              mkdir -p /tmp/webrtc_build/out/Release
              gn gen /tmp/webrtc_build/out/Release --args=" \
                is_clang=true \
                target_os=\"linux\" \
                target_cpu=\"arm64\" \
                is_debug=false \
                is_component_build=false \
                use_sysroot=false \
                treat_warnings_as_errors=false \
                enable_iterator_debugging=false \
                use_custom_libcxx=false \
                rtc_include_tests=false \
                rtc_build_examples=false \
                rtc_build_tools=false \
                rtc_use_pipewire=false \
                rtc_enable_protobuf=true \
                rtc_enable_libevent=false \
                rtc_use_x11=false \
                rtc_use_gtk=false \
                rtc_use_openssl=false \
                rtc_use_h264=true \
                rtc_use_builtin_ssl_root_certs=true \
                clang_base_path=\"${LLVM_DIR}\" \
                symbol_level=0 \
                blink_symbol_level=0 \
                v8_symbol_level=0
              " 

              echo "==> Building WebRTC"
              ninja -C /tmp/webrtc_build/out/Release -j$(nproc)
            '

      - name: Upload WebRTC library
        uses: actions/upload-artifact@v4
        with:
          name: webrtc-${{ inputs.WEBRTC_STABLE }}
          path: /tmp/webrtc_build/webrtc/src/out/Release/obj/libwebrtc.a